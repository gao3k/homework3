def manual_min(lst=None):

    if lst is None:
        lst = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]


    min_val = float('inf')

    for num in lst:
        
        if num < min_val:
         
            min_val = num

    
    return min_val


print(manual_min([3, 6, 8, 1, 0])) 
print(manual_min())  

#ეს კოდი განსაზღვრავს ფუნქციას სახელწოდებით `manual_min`, რომელიც პოულობს მინიმალურ მნიშვნელობას სიაში. აი, როგორ მუშაობს ის:

#ფუნქცია "manual_min" იღებს ერთ პარამეტრს "list", რომელიც ნაგულისხმევად არის როგორც არაფრად.

#2. თუ `list` არ არის მინიჭებული (ანუ არის "არცერთი"), ფუნქცია ანიჭებს ნაგულისხმევ სიას `[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]` `lst-ს `.

#3. იგი ახდენს ცვლადის "min_val" ინიციალიზებას დადებით უსასრულობამდე (`float('inf')`). ეს კეთდება იმის უზრუნველსაყოფად, რომ სიაში ნებისმიერი მნიშვნელობა თავდაპირველად „min_val“-ზე ნაკლები იქნება.

#4. ის იმეორებს თითოეულ ელემენტს (`num`) მოწოდებულ ან ნაგულისხმევ სიაში.

#5. ციკლის შიგნით ის ამოწმებს, არის თუ არა მიმდინარე ელემენტი (`num`) ნაკლები მიმდინარე მინიმალურ მნიშვნელობაზე (`min_val`). თუ ასეა, ის განაახლებს `min_val`-ს, რათა იყოს `num`-ის ტოლი.

#6. სიის ყველა ელემენტის გამეორების შემდეგ, ის აბრუნებს ნაპოვნი უმცირეს მნიშვნელობას (`min_val`).
